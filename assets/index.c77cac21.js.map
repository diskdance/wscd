{"version":3,"mappings":"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","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_imports_0","VUE_APP_VERSION","VUE_GIT_HASH","DomainConnectivityResult","DomainBlockingResult","CheckStatus","store","reactive","TaskDispatcher","concurrency","__publicField","job","task","i","getSignalAbortedAfter","ms","controller","useModelWrapper","props","emit","name","computed","value","CONCURRENCY","TIMEOUT_MS","FETCH_OPT","ConnectivityChecker","domainList","perDomainCheckStarted","perDomainFinished","domain","isWiki","domainData","resp","respJson","ip","startTime","gbRespJson","STEPPING","_sfc_main$8","defineComponent","key","translation","status","blockStatus","ping","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_14","_hoisted_16","_resolveComponent","_openBlock","_createElementVNode","_ctx","_createVNode","_cache","_withScopeId","banana","inject","isTableExpanded","reloadWindow","getDomainsFriendlyDesc","domains","inaccessibleDomains","dataView","item","blockedDomains","inaccessibleDomainsDesc","blockedDomainsDesc","hasProblem","checkedDomainsCount","currentCheckingDomain","ref","transformRawDomainList","rawDomainList","handleError","check","data","prepareAndCheck","prefetchAll","rawList","__vitePreload","glob","path","v","_","reject","MAPPINGS","getCurrentLang","lang","getI18nInfo","messageSource","EnMessageSource","selectedLang","currentLang","__variableDynamicImportRuntimeHelper","createApp","App","Banana","app"],"sources":["../../vite/modulepreload-polyfill","../../src/components/SiteHeader.vue","../../src/assets/toolforge.svg","../../src/components/SiteFooter.vue","../../src/modules/store.ts","../../src/modules/TaskDispatcher.ts","../../src/modules/utils.ts","../../src/modules/ConnectivityChecker.ts","../../src/components/DataTable.vue","../../src/components/ProgressIndicator.vue","../../src/components/ToggleSwitch.vue","../../src/components/CheckTypeField.vue","../../src/components/SummaryCard.vue","../../src/components/SiteMain.vue","../../../../../../../@vite/dynamic-import-helper","../../src/modules/lang.ts","../../src/main.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","<template>\n  <header class=\"site-header\">\n    <div class=\"site-header__title\">\n      <a href=\".\">{{ $i18n('title-abbr') }}</a>\n    </div>\n    <div class=\"site-header__desc\">{{ $i18n('header-slogan') }}</div>\n  </header>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.site-header {\n  margin: 1em 5%;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  &__title {\n    font-weight: 700;\n    flex: 1;\n\n    min-width: 50%;\n\n    a {\n      color: @color-text;\n      text-decoration: none;\n    }\n  }\n\n  &__desc {\n    font-size: 80%;\n    color: @color-text-secondary;\n  }\n}\n</style>\n","export default \"__VITE_ASSET__4dc3ed1b__\"","<script setup lang=\"ts\">\nconst VUE_APP_VERSION = APP_VERSION;\nconst VUE_GIT_HASH = GIT_HASH;\n</script>\n\n<template>\n  <footer class=\"site-footer\">\n    <img class=\"site-footer__badge\" src=\"../assets/toolforge.svg\" :alt=\"$i18n('footer-badge-alt')\">\n    <div class=\"site-footer__text\">\n      <a class=\"site-footer__src\" target=\"_blank\" href=\"https://github.com/diskdance/wscd\">{{\n      $i18n('footer-code') }}</a>\n      <a class=\"site-footer__license\" target=\"_blank\"\n        href=\"https://github.com/diskdance/wscd/blob/master/LICENSE\">{{\n        $i18n('footer-license')\n        }}</a>\n      <span class=\"site-footer__version\">wscd {{ VUE_APP_VERSION }} ({{ VUE_GIT_HASH }})</span>\n    </div>\n  </footer>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.site-footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-wrap: wrap-reverse;\n  margin: 30px 0 10px;\n  font-size: 0.8em;\n\n  &__text {\n    margin-top: 10px;\n    flex: 3;\n    display: flex;\n    justify-content: space-around;\n    white-space: nowrap;\n    flex-wrap: wrap;\n  }\n\n  &__src,\n  &__license,\n  &__version {\n    margin: 0 10px;\n  }\n\n  &__version {\n    color: @color-text-secondary;\n  }\n\n  &__badge {\n    .svg-invent-on-dark();\n    margin-top: 10px;\n    flex: 1;\n    display: block;\n    height: 30px;\n    width: 90px;\n  }\n}\n</style>\n","import { reactive } from 'vue';\n\nenum DomainConnectivityResult {\n  PENDING,\n  CHECKING,\n  SUCCESS,\n  FAILURE,\n}\n\nenum DomainBlockingResult {\n  NOT_BLOCKED,\n  BLOCKED,\n  UNKNOWN,\n  NOT_A_WIKI,\n}\n\nenum CheckStatus {\n  NOT_RUN,\n  PREPARING,\n  RUNNING,\n  ENDED,\n  ENDED_ERROR,\n}\n\ninterface DomainDataView {\n  connectivity: DomainConnectivityResult,\n  blocking?: DomainBlockingResult,\n  ping?: number,\n}\n\nconst store = reactive({\n  checkStatus: CheckStatus.NOT_RUN,\n  domainDataView: new Map<string, DomainDataView>(),\n});\n\nexport default store;\nexport type { DomainDataView };\nexport { DomainConnectivityResult, DomainBlockingResult, CheckStatus };\n","type Task = () => Promise<unknown>;\n\nclass TaskDispatcher {\n  private queue: Task[];\n\n  private workers: Promise<void>[];\n\n  private readonly concurrency: number;\n\n  /**\n   * Main routine for a pooled promise.\n   */\n  private async promiseMain() {\n    while (true) {\n      const job = this.queue.shift();\n      if (job === undefined) {\n        break;\n      }\n      await job();\n    }\n  }\n\n  public constructor(concurrency: number) {\n    this.queue = [];\n    this.workers = [];\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Add a task to the queue to run it later.\n   * @param task task\n   */\n  public enqueue(task: Task): void {\n    this.queue.push(task);\n  }\n\n  public async run(): Promise<unknown> {\n    this.workers = [];\n    for (let i = 0; i < this.concurrency; i++) {\n      this.workers.push(this.promiseMain());\n    }\n    return Promise.all(this.workers);\n  }\n}\n\nexport default TaskDispatcher;\n","import { computed, WritableComputedRef } from 'vue';\n\nfunction resolveAfter(ms: number) {\n  return new Promise((resolve) => { setTimeout(resolve, ms); });\n}\n\nfunction getSignalAbortedAfter(ms: number): AbortSignal {\n  const controller = new AbortController();\n\n  setTimeout(() => {\n    controller.abort();\n  }, ms);\n\n  return controller.signal;\n}\n\n/**\n * Return a computed property that returns the corresponding prop value when is accessed\n * and fires an event when is set. Used with v-model.\n * @param props props field of a component\n * @param emit emit function of a component\n * @param name name of the prop\n * @return wrapped computer property\n */\nfunction useModelWrapper<T extends string, P extends Record<T, unknown>>(\n  props: P,\n  emit: (event: `update:${T}`, value: P[T]) => void,\n  name: T = 'modelValue' as T,\n)\n  : WritableComputedRef<P[T]> {\n  return computed({\n    get() {\n      return props[name];\n    },\n    set(value) {\n      emit(`update:${name}`, value);\n    },\n  });\n}\n\nexport { resolveAfter, getSignalAbortedAfter, useModelWrapper };\n","import TaskDispatcher from './TaskDispatcher';\nimport { getSignalAbortedAfter } from './utils';\n\ninterface DomainData {\n  domain: string,\n  isWiki: boolean,\n  isSuccessful: boolean,\n  ping?: number,\n  isBlocked?: boolean,\n}\n\ninterface MwQueryUserInfoApiResult {\n  query?: {\n    userinfo: {\n      id: number,\n      name: string,\n      anon: boolean,\n      blockid?: unknown,\n    }\n  }\n}\n\ninterface MwQueryGlobalBlocksApiResult {\n  query?: {\n    globalblocks: Array<{\n      address: string,\n    }>\n  }\n}\n\ntype DomainList = Array<[string, boolean]>;\n\nconst CONCURRENCY = 15;\nconst TIMEOUT_MS = 30 * 1000;\nconst FETCH_OPT = { method: 'GET', headers: { 'Api-User-Agent': `wscd/${APP_VERSION}` } };\n\nclass ConnectivityChecker {\n  private readonly domainList: DomainList;\n\n  private readonly perDomainCheckStarted: (domain: string) => void;\n\n  private readonly perDomainFinished: (data: DomainData) => void;\n\n  private readonly taskDispatcher: TaskDispatcher;\n\n  /**\n   * Instantiate a {@link ConnectivityChecker} object.\n   * @param domainList a list of sites to be checked\n   * @param perDomainCheckStarted a callback which is called when a single domain test is started\n   * @param perDomainFinished a callback which is called when a single domain test is completed\n   * @param concurrency number of domain checks to run at a single time\n   */\n  public constructor(\n    domainList: DomainList,\n    perDomainCheckStarted: (domain: string) => void,\n    perDomainFinished: (data: DomainData) => void,\n    concurrency = CONCURRENCY,\n  ) {\n    this.domainList = domainList;\n    this.perDomainCheckStarted = perDomainCheckStarted;\n    this.perDomainFinished = perDomainFinished;\n    this.taskDispatcher = new TaskDispatcher(concurrency);\n  }\n\n  public async check(): Promise<unknown> {\n    this.domainList.forEach(([domain, isWiki]) => {\n      this.taskDispatcher.enqueue(() => {\n        const domainData: DomainData = {\n          domain,\n          isWiki,\n          isSuccessful: false,\n        };\n        this.perDomainCheckStarted(domain);\n        const startTime = performance.now();\n\n        const fetchPromise = isWiki\n          ? fetch(\n            `https://${domain}/w/api.php?action=query&format=json&formatversion=2&meta=userinfo&uiprop=blockinfo&origin=*`,\n            { ...FETCH_OPT, signal: getSignalAbortedAfter(TIMEOUT_MS) },\n          )\n            .then((resp) => resp.json())\n            .then((respJson: MwQueryUserInfoApiResult) => {\n              if (respJson.query === undefined) {\n                return null;\n              }\n              domainData.isBlocked = 'blockid' in respJson.query.userinfo;\n              return respJson.query.userinfo.name;\n            })\n          : fetch(\n            `https://${domain}/favicon.ico?wscd=${APP_VERSION}&nocache=${Date.now()}`,\n            { method: 'HEAD', mode: 'no-cors', signal: getSignalAbortedAfter(TIMEOUT_MS) },\n          );\n\n        return fetchPromise\n          .then(async (ip) => {\n            domainData.ping = Math.trunc(performance.now() - startTime);\n            domainData.isSuccessful = true;\n\n            if (typeof ip === 'string' && !domainData.isBlocked) {\n              // Check global blocks as uiprop=blockinfo doesn't acknowledge global blocks\n              try {\n                const gbRespJson: MwQueryGlobalBlocksApiResult = await fetch(\n                  `https://${domain}/w/api.php?action=query&list=globalblocks&bgip=${ip}&bgprop=address&format=json&formatversion=2&origin=*`,\n                  { ...FETCH_OPT, signal: getSignalAbortedAfter(TIMEOUT_MS) },\n                ).then((resp) => resp.json());\n\n                if (gbRespJson.query !== undefined) {\n                  domainData.isBlocked = gbRespJson.query.globalblocks.length > 0;\n                }\n              } catch { }\n            }\n          })\n          .catch(() => { domainData.isSuccessful = false; })\n          .then(() => { this.perDomainFinished(domainData); });\n      });\n    });\n\n    return this.taskDispatcher.run();\n  }\n}\n\nexport default ConnectivityChecker;\n","<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport store, { DomainBlockingResult, DomainConnectivityResult } from '../modules/store';\nimport SiteButton from './SiteButton.vue';\n\nconst STEPPING = 20;\n\nexport default defineComponent({\n  data() {\n    return {\n      domainDataView: store.domainDataView,\n      start: 0,\n      STEPPING,\n    };\n  },\n  computed: {\n    domainDataViewSlice() {\n      return [...this.domainDataView.entries()].slice(this.start, this.start + STEPPING);\n    },\n    isAtStart() {\n      return this.start - STEPPING < 0;\n    },\n    isAtEnd() {\n      return this.start + STEPPING > this.domainDataView.size - 1;\n    },\n  },\n  methods: {\n    getName(domain: string): string {\n      const transformedDomain = domain.replace(/^(www|m)\\./g, '').replace(/\\.(www|m)\\./g, '.');\n      const key = `name-${transformedDomain}`;\n      const translation = this.$i18n(key);\n      return translation === key ? this.$i18n('name-key-missing') : translation;\n    },\n    getStatus(status: DomainConnectivityResult): string {\n      switch (status) {\n        case DomainConnectivityResult.FAILURE:\n          return this.$i18n('avl-no');\n        case DomainConnectivityResult.SUCCESS:\n          return this.$i18n('avl-yes');\n        case DomainConnectivityResult.CHECKING:\n          return this.$i18n('checking');\n        default:\n          return this.$i18n('pending');\n      }\n    },\n    getDomainBlockingResult(blockStatus: DomainBlockingResult | undefined): string {\n      if (blockStatus === undefined) {\n        return '';\n      }\n      switch (blockStatus) {\n        case DomainBlockingResult.BLOCKED:\n          return this.$i18n('blk-yes');\n        case DomainBlockingResult.NOT_BLOCKED:\n          return this.$i18n('blk-no');\n        case DomainBlockingResult.NOT_A_WIKI:\n          return this.$i18n('blk-non-wiki');\n        default:\n          return this.$i18n('blk-unknown');\n      }\n    },\n    getConnectivity(ping: number | undefined): string {\n      if (ping === undefined) {\n        return '';\n      }\n      if (ping <= 500) {\n        return this.$i18n('rtt-excellent');\n      }\n      if (ping > 500 && ping <= 1000) {\n        return this.$i18n('rtt-good');\n      }\n      return this.$i18n('rtt-bad');\n    },\n    nextPage() {\n      if (!this.isAtEnd) {\n        this.start += STEPPING;\n      }\n    },\n    prevPage() {\n      if (!this.isAtStart) {\n        this.start -= STEPPING;\n      }\n    },\n    toStart() {\n      this.start = 0;\n    },\n    toEnd() {\n      this.start = this.domainDataView.size - (this.domainDataView.size % STEPPING);\n    },\n  },\n  components: { SiteButton },\n});\n</script>\n\n<template>\n  <div class=\"table-container\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>{{ $i18n('tbl-h-name') }}</th>\n          <th>{{ $i18n('tbl-h-domains') }}</th>\n          <th>{{ $i18n('tbl-h-available') }}</th>\n          <th>{{ $i18n('tbl-h-block') }}</th>\n          <th>{{ $i18n('tbl-h-conn') }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"[domain, { connectivity, ping, blocking }] in domainDataViewSlice\" :key=\"domain\">\n          <td>\n            <span aria-hidden=\"true\" class=\"table__mobile-header\">{{ $i18n('tbl-h-name') }}</span>\n            <span class=\"table__content\">{{ getName(domain) }}</span>\n          </td>\n          <td>\n            <span aria-hidden=\"true\" class=\"table__mobile-header\">{{ $i18n('tbl-h-domains')\n            }}</span>\n            <span class=\"table__content\">\n              <a target=\"_blank\" rel=\"noopener noreferrer\" :href=\"`https://${domain}/`\">\n                {{ domain }}\n              </a>\n            </span>\n          </td>\n          <td>\n            <span aria-hidden=\"true\" class=\"table__mobile-header\">{{ $i18n('tbl-h-available')\n            }}</span>\n            <span class=\"table__content\">{{ getStatus(connectivity) }}</span>\n          </td>\n          <td>\n            <span aria-hidden=\"true\" class=\"table__mobile-header\">{{ $i18n('tbl-h-block') }}</span>\n            <span class=\"table__content\">{{ getDomainBlockingResult(blocking) }}</span>\n          </td>\n          <td>\n            <span aria-hidden=\"true\" class=\"table__mobile-header\">{{ $i18n('tbl-h-conn') }}</span>\n            <span class=\"table__content\"\n              :title=\"ping === undefined ? undefined : $i18n('rtt-title', ping)\">\n              {{ getConnectivity(ping) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"table-container__pager\">\n      <SiteButton @click=\"toStart()\"\n        :class=\"['page__button', { 'pager__button--hidden': isAtStart }]\"\n        :title=\"$i18n('tbl-btn-jts')\">&lt;&lt;\n      </SiteButton>\n      <SiteButton @click=\"prevPage()\"\n        :class=\"['page__button', { 'pager__button--hidden': isAtStart }]\"\n        :title=\"$i18n('tbl-btn-prev')\">&lt;\n      </SiteButton>\n      <div>{{ $i18n('tbl-page-info', start + 1, isAtEnd ? domainDataView.size : start + STEPPING,\n      domainDataView.size) }}</div>\n      <SiteButton @click=\"nextPage()\"\n        :class=\"['page__button', { 'pager__button--hidden': isAtEnd }]\"\n        :title=\"$i18n('tbl-btn-next')\">&gt;\n      </SiteButton>\n      <SiteButton @click=\"toEnd()\" :class=\"['page__button', { 'pager__button--hidden': isAtEnd }]\"\n        :title=\"$i18n('tbl-btn-jte')\">&gt;&gt;\n      </SiteButton>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.table-container {\n  overflow-x: auto;\n\n  .table {\n    margin-left: auto;\n    margin-right: auto;\n    width: 100%;\n    line-height: 1.25;\n    border: 1px solid @color-border;\n    border-radius: @border-radius @border-radius 0 0;\n    border-spacing: 0;\n    border-collapse: separate;\n    overflow: hidden;\n\n    thead {\n      font-weight: bold;\n    }\n\n    th {\n      text-align: left;\n    }\n\n    tbody tr:nth-child(2n-1) {\n      background-color: @color-table-alt;\n    }\n\n    td,\n    th {\n      padding: 10px;\n    }\n\n    &__mobile-header {\n      display: none;\n    }\n\n    @media screen and (max-width: @site-width-narrow) {\n\n      /* Hide table header but not display:none for a11y */\n      thead {\n        position: absolute;\n        top: -9999px;\n        left: -9999px;\n      }\n\n      table,\n      thead,\n      tbody,\n      th,\n      td,\n      tr {\n        display: block;\n      }\n\n      &__content {\n        float: right;\n      }\n\n      &__mobile-header {\n        display: inline-block;\n        font-weight: 700;\n      }\n    }\n  }\n\n  &__pager {\n    border: 1px solid @color-border;\n    border-top: 0;\n    border-radius: 0 0 @border-radius @border-radius;\n    padding: 14px;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-wrap: wrap;\n\n    @media screen and (max-width: @site-width-narrow) {\n      flex-direction: column;\n\n      >* {\n        margin: 8px;\n      }\n    }\n\n    .pager__button--hidden {\n      visibility: hidden;\n    }\n  }\n}\n</style>\n","<template>\n  <!--\n    From https://github.com/vuetifyjs/vuetify/blob/next/packages/vuetify/src/components/VProgressCircular/VProgressCircular.tsx\n    Licensed under the MIT License.\n  -->\n  <svg tabindex=\"-1\" class=\"progress-indicator\" style=\"transform: rotate(calc(-90deg));\"\n    xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 43.01075268817205 43.01075268817205\">\n    <circle tabindex=\"-1\" class=\"progress-indicator__overlay\" fill=\"transparent\" cx=\"50%\" cy=\"50%\"\n      r=\"20\" stroke-width=\"3.0107526881720434\" stroke-dasharray=\"125.66370614359172\"\n      stroke-dashoffset=\"125.66370614359172px\"></circle>\n  </svg>\n</template>\n\n<style scoped lang=\"less\">\n.progress-indicator {\n  pointer-events: none;\n  animation: progress-indicator-rotate 1.4s linear infinite;\n  transform-origin: center center;\n  transition: all .2s ease-in-out;\n  color: #fff;\n\n  &__overlay {\n    animation: progress-indicator-dash 1.4s ease-in-out infinite;\n    stroke-dasharray: 25, 200;\n    stroke-dashoffset: 0;\n    stroke-linecap: round;\n    stroke: currentColor;\n    transition: all .2s ease-in-out, stroke-width 0s;\n    z-index: 2;\n  }\n\n  @keyframes progress-indicator-dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0px;\n    }\n\n    50% {\n      stroke-dasharray: 100, 200;\n      stroke-dashoffset: -15px;\n    }\n\n    to {\n      stroke-dasharray: 100, 200;\n      stroke-dashoffset: -124px;\n    }\n  }\n\n  @keyframes progress-indicator-rotate {\n    to {\n      transform: rotate(270deg);\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useModelWrapper } from '../modules/utils';\n\nconst props = defineProps<{\n  modelValue: boolean\n  ariaLabel: string,\n}>();\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst modelValue = useModelWrapper(props, emit);\n</script>\n\n<template>\n  <div class=\"toggle-switch\">\n    <input class=\"toggle-switch__input\" type=\"checkbox\" v-model=\"modelValue\" role=\"switch\"\n      :aria-checked=\"modelValue\" :aria-label=\"ariaLabel\">\n    <div class=\"toggle-switch__switch\">\n      <div class=\"toggle-switch__thumb\"></div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n@height: 32px;\n@width: 52px;\n@border-width: 2px;\n@thumb-unselected-width: 16px;\n@thumb-selected-width: 24px;\n@thumb-active-width: 28px;\n\n@color-inactive: @color-switch-inactive;\n@color-hover: @color-switch-hover;\n@color-enabled-inactive: #fff;\n@color-enabled-hover: #eaf3ff;\n\n@indicator-radius: 20px;\n\n.indicator-shadow(@radius, @color) {\n  box-shadow: 0px 0px 0px @radius @color;\n}\n\n@selector-thumb: .toggle-switch__switch .toggle-switch__thumb;\n\n.toggle-switch {\n  /* Enable 3D acceleration */\n  transform: translateZ(0);\n  position: relative;\n\n  &__switch {\n    .transition-ease-out-normal();\n    transition-property: background-color, border;\n    position: relative;\n    border: @border-width solid @color-inactive;\n    border-radius: 9999px;\n    width: @width;\n    height: @height;\n\n    .toggle-switch__thumb {\n      .transition-ease-out-normal();\n      transition-property: background-color, left, width, height, top, box-shadow;\n      position: absolute;\n      background-color: @color-inactive;\n      border-radius: 100%;\n      width: @thumb-unselected-width;\n      height: $width;\n      top: (@height / 2 - @border-width - $height / 2);\n      left: $top;\n    }\n  }\n\n  &__input {\n    cursor: pointer;\n    position: absolute;\n    z-index: 2;\n    opacity: 0;\n    width: @width;\n    height: @height;\n\n    &:hover,\n    &:focus {\n      +@{selector-thumb} {\n        .indicator-shadow((@indicator-radius - @thumb-unselected-width / 2),\n          @color-switch-indicator-focus);\n        background-color: @color-hover;\n      }\n    }\n\n    &:checked {\n      &+.toggle-switch__switch {\n        background-color: @color-major;\n        border-color: @color-major;\n\n        .toggle-switch__thumb {\n          background-color: @color-enabled-inactive;\n          width: @thumb-selected-width;\n          height: $width;\n          top: (@height / 2 - @border-width - $height / 2);\n          left: @width - @border-width * 2 - $top - $width;\n        }\n      }\n\n      &:hover,\n      &:focus {\n        +@{selector-thumb} {\n          .indicator-shadow((@indicator-radius - @thumb-selected-width / 2),\n            @color-switch-indicator-focus);\n          background-color: @color-enabled-hover;\n        }\n      }\n\n      &:active+@{selector-thumb} {\n        .indicator-shadow((@indicator-radius - @thumb-active-width / 2),\n          @color-switch-indicator-active);\n        @active-top: (@height / 2 - @border-width - @thumb-active-width / 2);\n        left: @width - @border-width * 2 - @active-top - @thumb-active-width;\n      }\n    }\n\n    &:active+@{selector-thumb} {\n      .indicator-shadow((@indicator-radius - @thumb-active-width / 2),\n        @color-switch-indicator-active);\n      width: @thumb-active-width;\n      height: $width;\n      top: (@height / 2 - @border-width - $height / 2);\n      left: $top;\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useModelWrapper } from '../modules/utils';\nimport ToggleSwitch from './ToggleSwitch.vue';\n\nconst props = defineProps<{\n  modelValue: boolean,\n}>();\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst modelValue = useModelWrapper(props, emit);\n</script>\n\n<template>\n  <div class=\"ct-field\">\n    <div class=\"ct-field__type\">{{ $i18n('ct-field-type') }}</div>\n    <div class=\"ct-field__value\">\n      <span :class=\"['type-label', 'type-label--left', { 'type-label--active': !modelValue }]\">{{\n      $i18n('ct-field-std') }}</span>\n      <ToggleSwitch class=\"ct-field__toggle\" v-model=\"modelValue\"\n        :ariaLabel=\"$i18n('ct-field-ext-check')\"></ToggleSwitch>\n      <span :class=\"['type-label', 'type-label--right', { 'type-label--active': modelValue }]\">{{\n      $i18n('ct-field-ext') }}</span>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.ct-field {\n  font-size: 0.9em;\n\n  &__type {\n    text-align: center;\n    margin-bottom: 0.5em;\n  }\n\n  &__value {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n\n  &__toggle {\n    transform: scale(.9);\n    margin: auto 12px;\n  }\n\n  .type-label {\n    .transition-ease-out-fast();\n    transition-property: opacity;\n    opacity: 0.5;\n\n    /* Make toggle centered */\n    min-width: min(256px, 20vw);\n\n    @supports not (min-width: $min-width) {\n      min-width: 256px;\n\n      @media screen and (max-width: @site-width-narrow) {\n        min-width: 20vw;\n      }\n    }\n\n    &--active {\n      opacity: 1;\n    }\n\n    &--left {\n      text-align: right;\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, inject } from 'vue';\nimport Banana from 'banana-i18n';\nimport store, {\n  CheckStatus, DomainConnectivityResult, DomainBlockingResult,\n} from '../modules/store';\nimport SiteButton from './SiteButton.vue';\nimport ProgressBar from './ProgressBar.vue';\nimport { useModelWrapper } from '../modules/utils';\n\nconst props = defineProps<{\n  isTableExpanded: boolean\n}>();\n\nconst emit = defineEmits(['update:isTableExpanded']);\n\nconst banana = inject<Banana>('banana')!;\n\nconst isTableExpanded = useModelWrapper(props, emit, 'isTableExpanded');\n\nfunction reloadWindow() {\n  window.location.reload();\n}\n\nfunction getDomainsFriendlyDesc(domains: string[]): string {\n  if (domains.length === 0) {\n    return banana.i18n('sc-domain-desc-none');\n  }\n  if (domains.length === 1) {\n    return domains[0];\n  }\n  return banana.i18n('sc-domain-desc', domains[0], domains.length - 1);\n}\n\nconst inaccessibleDomains = computed(\n  () => [...store.domainDataView.entries()]\n    .filter(\n      ([, dataView]) => dataView.connectivity === DomainConnectivityResult.FAILURE,\n    )\n    .map(([item]) => item),\n);\n\nconst blockedDomains = computed(\n  () => [...store.domainDataView.entries()]\n    .filter(\n      ([, dataView]) => dataView.blocking === DomainBlockingResult.BLOCKED,\n    )\n    .map(([item]) => item),\n);\n\nconst inaccessibleDomainsDesc = computed(\n  () => getDomainsFriendlyDesc(inaccessibleDomains.value),\n);\n\nconst blockedDomainsDesc = computed(\n  () => getDomainsFriendlyDesc(blockedDomains.value),\n);\n\nconst hasProblem = computed(\n  () => inaccessibleDomains.value.length + blockedDomains.value.length !== 0,\n);\n\nconst checkedDomainsCount = computed(() => [...store.domainDataView.values()]\n  .filter(\n    (dataView) => dataView.connectivity !== DomainConnectivityResult.CHECKING\n      && dataView.connectivity !== DomainConnectivityResult.PENDING,\n  ).length);\n\nconst currentCheckingDomain = computed(() => (\n  [...store.domainDataView.entries()]\n    .reverse()\n    .find(([, dataView]) => dataView.connectivity === DomainConnectivityResult.CHECKING)\n  || ['']\n)[0]);\n\n</script>\n\n<template>\n  <div class=\"summary-card\">\n    <Transition name=\"slide\" mode=\"out-in\">\n\n      <div class=\"summary-card__main summary-card__main--running\"\n        v-if=\"store.checkStatus === CheckStatus.RUNNING\">\n        <ProgressBar class=\"summary-card__progressbar\"\n          :value=\"checkedDomainsCount / store.domainDataView.size * 100\">\n        </ProgressBar>\n        <h2 class=\"summary-card__heading\">\n          {{ $i18n(\n          hasProblem ? 'sc-chk-h-err' : 'sc-chk-h',\n          checkedDomainsCount,\n          store.domainDataView.size\n          ) }}\n        </h2>\n        <div class=\"summary-card__content\">\n          <p>{{ $i18n('sc-chk-desc') }}</p>\n          <p>{{ $i18n('sc-chk-cur', currentCheckingDomain) }}</p>\n          <p>{{ $i18n('sc-inaccessible', inaccessibleDomainsDesc) }}</p>\n          <p>{{ $i18n('sc-blocked', blockedDomainsDesc) }}</p>\n        </div>\n        <div class=\"summary-card__action\">\n          <SiteButton :major=\"true\" @click=\"isTableExpanded = !isTableExpanded\">{{\n          $i18n(isTableExpanded\n          ? 'sc-btn-hide' : 'sc-btn-show') }}</SiteButton>\n        </div>\n      </div>\n\n      <div class=\"summary-card__main summary-card__main--ended\" v-else>\n        <h2 class=\"summary-card__heading\">{{ $i18n(hasProblem ? 'sc-end-h-err' : 'sc-end-h-np') }}\n        </h2>\n        <div class=\"summary-card__content\" v-if=\"hasProblem\">\n          <p>{{ $i18n('sc-end-b-err') }}</p>\n          <p>{{ $i18n('sc-total', store.domainDataView.size) }}</p>\n          <p>{{ $i18n('sc-inaccessible', inaccessibleDomainsDesc) }}</p>\n          <p>{{ $i18n('sc-blocked', blockedDomainsDesc) }}</p>\n          <h3>{{ $i18n('sc-end-b-err-1t') }}</h3>\n          <p>{{ $i18n('sc-end-b-err-1p1') }}</p>\n          <p>{{ $i18n('sc-end-b-err-1p2') }}</p>\n          <p>{{ $i18n('sc-end-b-err-1p3') }}</p>\n          <h3>{{ $i18n('sc-end-b-err-2t') }}</h3>\n          <p>{{ $i18n('sc-end-b-err-2p1') }}</p>\n          <!-- Sanitization done by banana-i18n -->\n          <p v-html=\"$i18n('sc-end-b-err-2p2')\"></p>\n        </div>\n        <div class=\"summary-card__content summary-card__content--no-problem\" v-else>\n          <p>{{ $i18n('sc-end-b-np') }}</p>\n        </div>\n        <div class=\"summary-card__action\">\n          <SiteButton :major=\"true\" @click=\"reloadWindow()\">{{ $i18n('sc-btn-recheck') }}\n          </SiteButton>\n          <SiteButton @click=\"isTableExpanded = !isTableExpanded\">{{\n          $i18n(isTableExpanded ? 'sc-btn-hide' : 'sc-btn-show')\n          }}</SiteButton>\n          <!-- <SiteButton>{{ $i18n('sc-btn-dl') }}</SiteButton> -->\n        </div>\n      </div>\n\n    </Transition>\n  </div>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.summary-card {\n  .card-normal();\n\n  @media screen and (min-width: @site-width-narrow) {\n    padding-left: 50px;\n  }\n\n  &__main {\n    &--running {\n      position: relative;\n\n      .summary-card__progressbar {\n        position: absolute;\n        /** FIXME: Magic value */\n        top: -20px;\n      }\n    }\n  }\n\n  &__heading {\n    margin-bottom: 0.375em;\n\n    @media screen and (max-width: @site-width-narrow) {\n      margin-bottom: 0.5em;\n    }\n  }\n\n  &__content {\n\n    p,\n    h3 {\n      margin-bottom: 0.375em;\n\n      @media screen and (max-width: @site-width-narrow) {\n        margin-top: 0.5em;\n        margin-bottom: 1em;\n      }\n    }\n  }\n\n  &__action {\n    margin-top: 1em;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n\n    >* {\n      margin: 8px;\n    }\n  }\n\n  .slide {\n\n    &-enter-active,\n    &-leave-active {\n      .transition-ease-out-normal();\n      transition-property: opacity, transform;\n    }\n\n    &-enter-from {\n      opacity: 0;\n      transform: translateX(30px);\n    }\n\n    &-leave-to {\n      opacity: 0;\n      transform: translateX(-30px);\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport store, {\n  DomainConnectivityResult, DomainBlockingResult, CheckStatus,\n} from '../modules/store';\n\nimport SiteCard from './SiteCard.vue';\nimport ConnectivityChecker from '../modules/ConnectivityChecker';\nimport DataTable from './DataTable.vue';\nimport RoundButton from './RoundButton.vue';\nimport CheckTypeField from './CheckTypeField.vue';\nimport SummaryCard from './SummaryCard.vue';\n\ntype RawDomainList = Array<string | [string, boolean]>;\n\nconst isExtendedCheck = ref(false);\nconst isTableExpanded = ref(false);\n\nfunction transformRawDomainList(rawDomainList: RawDomainList): Array<[string, boolean]> {\n  return rawDomainList.map((item) => (typeof item === 'string' ? [item, true] : item));\n}\n\nfunction handleError() {\n  store.checkStatus = CheckStatus.ENDED_ERROR;\n}\n\nasync function check(domainList: Array<[string, boolean]>) {\n  store.checkStatus = CheckStatus.RUNNING;\n  domainList.forEach(([domain]) => {\n    store.domainDataView.set(\n      domain,\n      { connectivity: DomainConnectivityResult.PENDING },\n    );\n  });\n  const checker = new ConnectivityChecker(\n    domainList,\n    (domain) => {\n      // dataView cannot be undefined in this case\n      const dataView = store.domainDataView.get(domain)!;\n      dataView.connectivity = DomainConnectivityResult.CHECKING;\n    },\n    (data) => {\n      // dataView cannot be undefined in this case\n      const dataView = store.domainDataView.get(data.domain)!;\n      dataView.connectivity = data.isSuccessful\n        ? DomainConnectivityResult.SUCCESS : DomainConnectivityResult.FAILURE;\n      dataView.ping = data.ping;\n      if (!data.isSuccessful) {\n        dataView.blocking = DomainBlockingResult.UNKNOWN;\n      } else if (data.isWiki) {\n        if (data.isBlocked !== undefined) {\n          if (data.isBlocked) {\n            dataView.blocking = DomainBlockingResult.BLOCKED;\n          } else {\n            dataView.blocking = DomainBlockingResult.NOT_BLOCKED;\n          }\n        } else {\n          dataView.blocking = DomainBlockingResult.UNKNOWN;\n        }\n      } else {\n        dataView.blocking = DomainBlockingResult.NOT_A_WIKI;\n      }\n    },\n  );\n  await checker.check();\n  store.checkStatus = CheckStatus.ENDED;\n}\n\nasync function prepareAndCheck(prefetchAll: boolean) {\n  try {\n    store.checkStatus = CheckStatus.PREPARING;\n    store.domainDataView.clear();\n    const { default: rawList } = prefetchAll\n      ? await import('../assets/sites-all.json')\n      : await import('../assets/sites-std.json');\n    // Must await to catch all errors\n    await check(transformRawDomainList(rawList as RawDomainList));\n  } catch {\n    handleError();\n  }\n}\n</script>\n\n<template>\n  <main class=\"site-main\">\n\n    <Transition name=\"site-main\" mode=\"out-in\">\n      <div class=\"site-main__check-panel\"\n        v-if=\"[CheckStatus.NOT_RUN, CheckStatus.PREPARING].includes(store.checkStatus)\">\n        <RoundButton class=\"check-panel__button\" @click=\"prepareAndCheck(isExtendedCheck)\"\n          :disabled=\"store.checkStatus === CheckStatus.PREPARING\"\n          :waiting=\"store.checkStatus === CheckStatus.PREPARING\">{{ $i18n('btn-chk') }}\n        </RoundButton>\n\n        <CheckTypeField class=\"check-panel__ct-field\" v-model=\"isExtendedCheck\"></CheckTypeField>\n\n        <SiteCard class=\"check-panel__info-card\">\n          <template #header>{{ $i18n('card-about-head') }}</template>\n          <template #default>\n            <p>{{ $i18n('card-about-desc-1') }}</p>\n            <p>{{ $i18n('card-about-desc-2') }}</p>\n            <!-- Sanitization done by banana-i18n -->\n            <p v-html=\"$i18n('card-about-desc-3')\"></p>\n          </template>\n        </SiteCard>\n      </div>\n\n      <SummaryCard class=\"site-main__summary-card\" v-model:isTableExpanded=\"isTableExpanded\"\n        v-else-if=\"[CheckStatus.RUNNING, CheckStatus.ENDED].includes(store.checkStatus)\">\n      </SummaryCard>\n\n      <SiteCard class=\"site-main__error-card\"\n        v-else-if=\"store.checkStatus === CheckStatus.ENDED_ERROR\" type=\"error\">\n        <template #header>{{ $i18n('card-err-head') }}</template>\n        <template #default>\n          {{ $i18n('card-err-desc') }}\n        </template>\n      </SiteCard>\n    </Transition>\n\n    <Transition name=\"site-main__data-table\">\n      <DataTable class=\"site-main__data-table\" v-if=\"isTableExpanded\"></DataTable>\n    </Transition>\n\n  </main>\n</template>\n\n<style scoped lang=\"less\">\n@import '../styles/mixins.less';\n\n.site-main {\n  display: flex;\n  flex-direction: column;\n\n  &__waiting-indicator {\n    width: 80%;\n    margin: 0 auto;\n  }\n\n  &__check-panel {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .check-panel__button {\n      margin-top: 2em;\n    }\n\n    .check-panel__ct-field {\n      margin-top: 5em;\n    }\n\n    .check-panel__info-card {\n      margin-top: 5em;\n\n      @media screen and (max-width: @site-width-narrow) {\n        display: none !important;\n      }\n    }\n  }\n\n  &__summary-card,\n  &__error-card {\n    margin: 5em auto;\n\n    @media screen and (max-width: @site-width-narrow) {\n      margin: 1em auto;\n    }\n  }\n\n  &__data-table {\n\n    &-enter-active,\n    &-leave-active {\n      .transition-ease-out-normal();\n      transition-property: opacity, transform;\n    }\n\n    &-enter-from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n\n    &-leave-to {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n  }\n\n  &-enter-active,\n  &-leave-active {\n    .transition-ease-out-normal();\n    transition-property: opacity, transform;\n  }\n\n  &-enter-from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n\n  &-leave-to {\n    opacity: 0;\n    transform: translateY(-50%);\n  }\n}\n</style>\n","export default (glob, path) => {\n    const v = glob[path];\n    if (v) {\n        return typeof v === 'function' ? v() : Promise.resolve(v);\n    }\n    return new Promise((_, reject) => {\n        (typeof queueMicrotask === 'function' ? queueMicrotask : setTimeout)(reject.bind(null, new Error('Unknown variable dynamic import: ' + path)));\n    });\n}","import { MessageSource } from 'banana-i18n';\nimport EnMessageSource from '../../i18n-merged/en.json';\n\nconst MAPPINGS: Record<string, string> = {\n  zh: 'zh-hans',\n  'zh-cn': 'zh-hans',\n  'zh-tw': 'zh-hant',\n  'zh-sg': 'zh-hans',\n};\n\n/**\n * Get user's preferred language. `?lang=xxx` takes priority over `navigator.languages`.\n * @return language\n */\nfunction getCurrentLang(): string {\n  let lang = (new URLSearchParams(window.location.search).get('lang')\n    || navigator.language).toLowerCase();\n  if (lang in MAPPINGS) {\n    lang = MAPPINGS[lang];\n  }\n  return lang;\n}\n\nasync function getI18nInfo(): Promise<{ lang: string, messageSource: MessageSource }> {\n  const lang = getCurrentLang();\n  const messageSource: Record<string, Record<string, string>> = {\n    en: EnMessageSource,\n  };\n\n  let selectedLang = 'en';\n  if (!lang.startsWith('en')) {\n    for (const currentLang of [lang, lang.split('-')[0]]) {\n      try {\n        messageSource[currentLang] = (await import(`../../i18n-merged/${currentLang}.json`)).default;\n        selectedLang = currentLang;\n        break;\n      } catch { }\n    }\n  }\n  return { lang: selectedLang, messageSource };\n}\n\nexport default getI18nInfo;\n","import { createApp } from 'vue';\nimport Banana from 'banana-i18n';\n\nimport './styles/reset.less';\nimport './styles/style.less';\n\nimport '@fontsource/inter/400.css';\nimport '@fontsource/inter/700.css';\n\nimport App from './App.vue';\nimport getI18nInfo from './modules/lang';\n\n(async () => {\n  const app = createApp(App);\n\n  const { lang, messageSource } = await getI18nInfo();\n  const banana = new Banana(lang, { messages: messageSource, wikilinks: true });\n\n  document.title = banana.i18n('title');\n  document.documentElement.lang = lang; // For a11y support\n\n  app.config.globalProperties.$i18n = banana.i18n.bind(banana);\n  app.provide('banana', banana);\n  app.mount('#app');\n})();\n"],"file":"assets/index.c77cac21.js"}